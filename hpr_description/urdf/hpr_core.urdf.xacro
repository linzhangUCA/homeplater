<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" >
    <!-- Import colors -->
    <xacro:include filename="$(find hpr_description)/urdf/materials.xacro" />
    <!-- Import inertia -->
    <xacro:include filename="$(find hpr_description)/urdf/inertia.xacro" />
    <!-- Define properties -->
    <!-- base properties -->
    <xacro:property name="base_width" value="0.16" />
    <xacro:property name="base_depth" value="0.16" />
    <xacro:property name="base_height" value="0.005" />
    <xacro:property name="base_mass" value="1.0" />
    <!-- wheel properties -->
    <xacro:property name="wheel_offset" value="0.095" />
    <xacro:property name="wheel_radius" value="0.0325" />
    <xacro:property name="wheel_width" value="0.027" />
    <xacro:property name="wheel_mass" value="0.032" />
    <!-- caster properties -->
    <xacro:property name="caster_xoff" value="-0.092" />
    <xacro:property name="caster_radius" value="0.014" />
    <xacro:property name="caster_mass" value="0.1" />

    <!-- Wheel macro -->
    <xacro:macro name="wheel" params="prefix y_reflect">
        <joint name="${prefix}_joint" type="continuous">
            <parent link="base_link" />
            <child link="${prefix}_link" />
            <origin xyz="0 ${y_reflect*wheel_offset} 0" rpy="${pi/2} 0 0" />
            <axis xyz="0 0 1" />
        </joint>

        <link name="${prefix}_link">
            <visual>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}" />
                </geometry>
                <material name="black" />
            </visual>

            <collision>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}" />
                </geometry>
            </collision>

            <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" h="${wheel_width}" />
        </link>

    </xacro:macro>

    <!-- CENTER OF WHEEL BASE -->
    <link name="base_link">
    </link>

    <!-- CHASSIS -->
    <joint name="chassis_joint" type="fixed">
        <parent link="base_link"/>
        <child link="chassis"/>
        <origin xyz="-0.048 0 0.013"/>
    </joint>
    
    <link name="chassis">
        <visual>
            <geometry>
                <box size="${base_depth} ${base_width} ${base_height}"/>
            </geometry>
            <material name="purple"/>
        </visual>

        <collision>
            <geometry>
                <box size="${base_depth} ${base_width} ${base_height}"/>
            </geometry>
            <material name="purple"/>
        </collision>

        <xacro:box_inertia m="${base_mass}" d="${base_depth}" w="${base_width}" h="${base_height}" />
    </link>

    <gazebo reference="chassis">
        <material>Gazebo/Purple</material>
    </gazebo>

    <!-- LEFT WHEEL -->
    <xacro:wheel prefix="left_wheel" y_reflect="1" />

    <!-- RIGHT WHEEL -->
    <xacro:wheel prefix="right_wheel" y_reflect="-1" />

    <!-- CASTER BALL -->
    <joint name="caster_joint" type="fixed">
        <parent link="base_link" />
        <child link="caster" />
        <origin xyz="${caster_xoff} 0.0 ${caster_radius-wheel_radius}" />
    </joint>

    <link name="caster">
        <visual>
            <geometry>
                <sphere radius="${caster_radius}" />
            </geometry>
            <material name="gray" />
        </visual>

        <collision>
            <geometry>
                <sphere radius="${caster_radius}" />
            </geometry>
        </collision>

        <xacro:sphere_inertia m="${caster_mass}" r="${caster_radius}" />
    </link>

    <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
            <ros>
                <namespace>/homeplater</namespace>
                <!-- <argument>cmd_vel:=cmd_demo</argument>
                <argument>odom:=odom_demo</argument> -->
            </ros>
            <robot_base_frame>base_link</robot_base_frame>
            <update_rate>100</update_rate>
            <left_joint>left_wheel_joint</left_joint>
            <right_joint>right_wheel_joint</right_joint>
            <wheel_separation>0.19</wheel_separation>
            <wheel_diameter>0.065</wheel_diameter>
            <publish_odom>true</publish_odom>
            <publish_odom_tf>false</publish_odom_tf>
            <publish_wheel_tf>true</publish_wheel_tf>
            <odometry_frame>odom</odometry_frame>
            <max_wheel_torque>10</max_wheel_torque>
            <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
            <max_acceleration>1.0</max_acceleration>
        </plugin>
    </gazebo>

</robot>

